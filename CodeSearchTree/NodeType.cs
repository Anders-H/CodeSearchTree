namespace CodeSearchTree
{
    public enum NodeType //Ändra även i filen SearchExpresionParser.cs om denna ändras.
    {
        Any,
        UnknownNode,
        UsingDirectiveSyntaxNode,
        NamespaceDeclarationSyntaxNode,
        ClassDeclarationSyntaxNode,
        IdentifierNameSyntaxNode,
        QualifiedNameSyntaxNode,
        FieldDeclarationSyntaxNode,
        VariableDeclarationSyntaxNode,
        VariableDeclaratorSyntaxNode,
        PropertyDeclarationSyntaxNode,
        AccessorListSyntaxNode,
        AccessorDeclarationSyntaxNode,
        AttributeListSyntaxNode,
        AttributeSyntaxNode,
        AttributeArgumentListSyntaxNode,
        BlockSyntaxNode,
        ReturnStatementSyntaxNode,
        MethodDeclarationSyntaxNode,
        PredefinedTypeSyntaxNode,
        ParameterListSyntaxNode,
        ExpressionStatementSyntaxNode,
        InvocationExpressionSyntaxNode,
        ArgumentListSyntaxNode,
        AssignmentExpressionSyntaxNode,
        MemberAccessExpressionSyntaxNode,
        SwitchStatementSyntaxNode,
        ArgumentSyntaxNode,
        LiteralExpressionSyntaxNode,
        IfStatementSyntaxNode,
        PrefixUnaryExpressionSyntaxNode,
        ParenthesizedExpressionSyntaxNode,
        BinaryExpressionSyntaxNode,
        ElseClauseSyntaxNode,
        WhileStatementSyntaxNode,
        BreakStatementSyntaxNode,
        UsingStatementSyntaxNode,
        ForStatementSyntaxNode,
        LabeledStatementSyntaxNode,
        BaseListSyntaxNode,
        SimpleBaseTypeSyntaxNode,
        GenericNameSyntaxNode,
        TypeArgumentListSyntaxNode,
        ParameterSyntaxNode,
        LocalDeclarationStatementSyntaxNode,
        EqualsValueClauseSyntaxNode,
        ObjectCreationExpressionSyntaxNode,
        TypeOfExpressionSyntaxNode,
        ThrowStatementSyntaxNode,
        ThisExpressionSyntaxNode,
        SimpleLambdaExpressionSyntaxNode,
        ForEachStatementSyntaxNode,
        TryStatementSyntaxNode,
        CatchClauseSyntaxNode,
        SwitchSectionSyntaxNode,
        CaseSwitchLabelSyntaxNode,
        DefaultSwitchLabelSyntaxNode,
        ArrayTypeSyntaxNode,
        ArrayRankSpecifierSyntaxNode,
        OmittedArraySizeExpressionSyntaxNode,
        ElementAccessExpressionSyntaxNode,
        BracketedArgumentListSyntaxNode,
        ConditionalExpressionSyntaxNode,
        PostfixUnaryExpressionSyntaxNode,
        ContinueStatementSyntaxNode,
        ConstructorDeclarationSyntaxNode,
        QueryExpressionSyntaxNode, //LINQ
        FromClauseSyntaxNode, //LINQ
        QueryBodySyntaxNode, //LINQ
        WhereClauseSyntaxNode, //LINQ
        SelectClauseSyntaxNode, //LINQ
        DoStatementSyntaxNode,
        NameEqualsSyntaxNode,
        EnumDeclarationSyntaxNode,
        EnumMemberDeclarationSyntaxNode,
        AttributeArgumentSyntaxNode,
        ConstructorInitializerSyntaxNode,
        EmptyStatementSyntaxNode,
        InitializerExpressionSyntaxNode,
        AwaitExpressionSyntaxNode,
        AnonymousObjectCreationExpressionSyntaxNode,
        AnonymousObjectMemberDeclaratorSyntaxNode,
        TypeParameterListSyntaxNode,
        TypeParameterSyntaxNode,
        DefaultExpressionSyntaxNode,
        InterfaceDeclarationSyntaxNode,
        CastExpressionSyntaxNode,
        BaseExpressionSyntaxNode,
        AttributeTargetSpecifierSyntaxNode,
        AliasQualifiedNameSyntaxNode,
        ExplicitInterfaceSpecifierSyntaxNode,
        CatchDeclarationSyntaxNode,
        ArrowExpressionClauseSyntaxNode,
        ConditionalAccessExpressionSyntaxNode,
        MemberBindingExpressionSyntaxNode,
        InterpolatedStringExpressionSyntaxNode,
        InterpolationSyntaxNode,
        InterpolatedStringTextSyntaxNode,
        GotoStatementSyntaxNode,
        LockStatementSyntaxNode,
        ArrayCreationExpressionSyntaxNode,
        FinallyClauseSyntaxNode
    }
}
